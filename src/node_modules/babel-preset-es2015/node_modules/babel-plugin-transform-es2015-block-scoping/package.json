{
  "name": "babel-plugin-transform-es2015-block-scoping",
  "version": "6.26.0",
  "description": "Compile ES2015 block scoping (const and let) to ES5",
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-es2015-block-scoping"
  },
  "license": "MIT",
  "main": "lib/index.js",
  "dependencies": {
    "babel-runtime": "^6.26.0",
    "babel-template": "^6.26.0",
    "babel-traverse": "^6.26.0",
    "babel-types": "^6.26.0",
    "lodash": "^4.17.4"
  },
  "keywords": [
    "babel-plugin"
  ],
  "devDependencies": {
    "babel-helper-plugin-test-runner": "^6.24.1"
  },
  "readme": "# babel-plugin-transform-es2015-block-scoping\n\n> Compile ES2015 block scoping (const and let) to ES5\n\n## Installation\n\n```sh\nnpm install --save-dev babel-plugin-transform-es2015-block-scoping\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"transform-es2015-block-scoping\"]\n}\n```\n\nWith options:\n\n```json\n{\n  \"plugins\": [\n    [\"transform-es2015-block-scoping\", {\n      \"throwIfClosureRequired\": true\n    }]\n  ]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins transform-es2015-block-scoping script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  plugins: [\"transform-es2015-block-scoping\"]\n});\n```\n\n## Options `throwIfClosureRequired`\n\nIn cases such as the following it's impossible to rewrite let/const without adding an additional function and closure while transforming:\n\n```javascript\nfor (let i = 0; i < 5; i++) {\n  setTimeout(() => console.log(i), 1);\n}\n```\n\nIn extremely performance-sensitive code, this can be undesirable. If `\"throwIfClosureRequired\": true` is set, Babel throws when transforming these patterns instead of automatically adding an additional function.\n",
  "readmeFilename": "README.md",
  "_id": "babel-plugin-transform-es2015-block-scoping@6.26.0",
  "_from": "babel-plugin-transform-es2015-block-scoping@^6.24.1"
}
